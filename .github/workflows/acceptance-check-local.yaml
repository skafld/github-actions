name: Acceptance check
on:
  workflow_call:
    inputs:
      skip:
        type: string
        default: '[]'
        required: false
        description: JSON list of steps to skip
      java_version:
        type: string
        default: '17'
        required: false
        description: Java version
      minikube_version:
        type: string
        required: false
        default: '1.30.1'
        description: minikube version
      kubernetes_version:
        type: string
        required: false
        default: '1.23.17'
        description: Kubernetes version
      node_version:
        type: string
        default: '16'
        required: false
        description: NodeJS version
      runner_tags:
        type: string
        required: false
        default: '["self-hosted", "development"]'
        description: GitHub runner tags
    secrets:
      CI_PAT:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ASSUMABLE_ROLES_MAP:
        required: true
jobs:
  gherkin-lint:
    name: "Gherkin lint"
    runs-on: ${{ fromJson(inputs.runner_tags) }}
    if: ${{ ! contains(fromJson(inputs.skip), 'gherkin-lint') }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
      -
        name: Configure npmrc
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.CI_PAT }}" > ~/.npmrc
      -
        name: Install linter
        run: sudo npm install -g gherkin-lint
      -
        name: Gherkin lint
        run: make ENV=local acceptance/gherkin-lint

  dry-run:
    needs: [gherkin-lint]
    runs-on: ${{ fromJson(inputs.runner_tags) }}
    name: "Dry-run"
    if: ${{ ! contains(fromJson(inputs.skip), 'dry-run') }}
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Setup java
      uses: actions/setup-java@v3
      with:
        cache: maven
        distribution: adopt
        java-version: ${{ inputs.java_version }}
        server-id: github
        server-username: GITHUB_USER
        server-password: GITHUB_TOKEN

    -
      name: Acceptance dry-run
      run: |
        make ENV=local acceptance/dry-run
      env:
        GITHUB_USER: skafld
        GITHUB_TOKEN: ${{ secrets.CI_PAT }}

  verify:
    needs: [dry-run]
    #runs-on: ${{ fromJson(inputs.runner_tags) }}
    # minikube doesn't like hosted runners
    runs-on: ["ubuntu-20.04"]
    name: "Verify - (local)"
    steps:
      -
        name: Configure git override
        run: |
          git config --global url."https://oauth2:${{ secrets.CI_PAT }}@github.com/skafld".insteadOf git@github.com:skafld
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Debug
        run: |
          docker context list
      -
        name: Setup Minikube
        uses: medyagh/setup-minikube@v0.0.13
        with:
          minikube-version: ${{ inputs.minikube_version }}
          kubernetes-version:  ${{ inputs.kubernetes_version }}
      -
        name: Configure cluster
        run: |
          kubectl config set-context docker-desktop --cluster=minikube --user=minikube --namespace=default
          kubectl config use-context docker-desktop
      -
        name: Setup java
        uses: actions/setup-java@v3
        with:
          cache: maven
          distribution: adopt
          java-version: ${{ inputs.java_version }}
          server-id: github
          server-username: GITHUB_USER
          server-password: GITHUB_TOKEN
      -
        name: Deploy
        run: |
          eval $(minikube -p minikube docker-env)

          make ENV=local docker/build kubectl/apply

          kubectl get pod -A
        env:
          GITHUB_USER: skafld
          GITHUB_TOKEN: ${{ secrets.CI_PAT }}
      -
        name: Wait for it
        run: |
          make ENV=local acceptance/api-wait-for-start
      -
        name: Run tests
        run: |
          make ENV=local acceptance/test
